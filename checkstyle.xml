<?xml version="1.0"?>
<!DOCTYPE module PUBLIC
        "-//Puppy Crawl//DTD Check Configuration 1.3//EN"
        "http://www.puppycrawl.com/dtds/configuration_1_3.dtd">

<module name = "Checker">
    <property name="charset" value="UTF-8"/>
    <property name="severity" value="warning"/>
    <property name="fileExtensions" value="java, properties, xml"/>
    <module name="SuppressWarningsFilter"/>
    <module name="TreeWalker">
      <!-- Annotations -->
      <module name="SuppressWarningsHolder"/>
      <module name="SuppressionFilter">
          <property name="file" value="suppressions.xml"/>
          <property name="optional" value="true"/>
      </module>
      <module name="SuppressionCommentFilter">
          <property name="offCommentFormat" value="CSOFF\: ([\w\|]+)"/>
          <property name="onCommentFormat" value="CSON\: ([\w\|]+)"/>
          <property name="checkFormat" value="$1"/>
      </module>
      <module name="AnnotationLocation">
        <property name="allowSamelineMultipleAnnotations" value="true"/>
        <property name="allowSamelineSingleParameterlessAnnotation" value="false"/>
        <property name="allowSamelineParameterizedAnnotation" value="false"/>
      </module>
      <module name="MissingOverride"/>
      <!-- Block Checks -->
      <module name="EmptyBlock"/>
      <module name="EmptyCatchBlock">
        <property name="exceptionVariableName" value="expected|ignore"/>
      </module>
      <module name="LeftCurly"/>
      <module name="RightCurly">
          <property name="id" value="RightCurlyAlone"/>
          <property name="option" value="alone"/>
          <property name="tokens" value="LITERAL_TRY, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_IF, LITERAL_ELSE, LITERAL_DO, CLASS_DEF, METHOD_DEF, CTOR_DEF, LITERAL_FOR, LITERAL_WHILE, STATIC_INIT, INSTANCE_INIT"/>
      </module>
      <module name="NeedBraces"/>
      <!-- Class Design -->
      <module name="InnerTypeLast"/>
      <module name="OneTopLevelClass"/>
      <module name="ThrowsCount"/>
      <!--Coding -->
      <module name="AvoidDoubleBraceInitialization"/>
      <module name="DefaultComesLast"/>
      <module name="EmptyStatement"/>
      <module name="EqualsAvoidNull"/>
      <module name="FallThrough"/>
      <module name="IllegalCatch">
        <property name="illegalClassNames" value="Error, Exception,java.lang.Error, java.lang.Exception"/>
      </module>
      <module name="IllegalThrows"/>
      <module name="MagicNumber"/>
      <module name="MissingSwitchDefault"/>
      <module name="ModifiedControlVariable"/>
      <module name="MultipleStringLiterals"/>
      <module name="MultipleVariableDeclarations"/>
      <module name="NoFinalizer"/>
      <module name="OneStatementPerLine"/>
      <module name="OverloadMethodsDeclarationOrder"/>
      <module name="PackageDeclaration"/>
      <module name="ParameterAssignment"/>
      <module name="ReturnCount">
        <property name="max" value="2"/>
      </module>
      <module name="SimplifyBooleanExpression"/>
      <module name="SimplifyBooleanReturn"/>
      <module name="StringLiteralEquality"/>
      <module name="UnnecessarySemicolonAfterOuterTypeDeclaration"/>
      <module name="UnnecessarySemicolonAfterTypeMemberDeclaration"/>
      <module name="UnnecessarySemicolonInEnumeration"/>
      <module name="UnnecessarySemicolonInTryWithResources"/>
      <!-- Imports -->
      <module name="AvoidStarImport"/>
      <module name="CustomImportOrder">
          <property name="sortImportsInGroupAlphabetically" value="true"/>
          <property name="separateLineBetweenGroups" value="true"/>
          <property name="customImportOrderRules" value="STATIC###THIRD_PARTY_PACKAGE"/>
      </module>
      <module name="RedundantImport"/>
      <module name="UnusedImports"/>
      <!-- Javadoc Comments -->
      <module name="AtclauseOrder">
          <property name="tagOrder" value="@param, @return, @throws, @deprecated"/>
          <property name="target" value="CLASS_DEF, INTERFACE_DEF, ENUM_DEF, METHOD_DEF, CTOR_DEF, VARIABLE_DEF"/>
      </module>
      <module name="JavadocMethod">
          <property name="scope" value="public"/>
          <property name="allowedAnnotations" value="Override, Test"/>
      </module>
      <module name="JavadocParagraph"/>
      <module name="JavadocStyle"/>
      <module name="JavadocTagContinuationIndentation"/>
      <module name="JavadocType">
          <property name="scope" value="public"/>
      </module>
      <module name="MissingJavadocMethod"/>
      <module name="MissingJavadocType"/>
      <module name="NonEmptyAtclauseDescription"/>
      <!-- Miscellaneous -->
      <module name="ArrayTypeStyle"/>
      <module name="AvoidEscapedUnicodeCharacters">
          <property name="allowEscapesForControlCharacters" value="true"/>
          <property name="allowByTailComment" value="true"/>
          <property name="allowNonPrintableEscapes" value="true"/>
      </module>
      <module name="CommentsIndentation"/>
      <module name="FinalParameters"/>
      <module name="Indentation">
          <property name="basicOffset" value="4"/>
          <property name="braceAdjustment" value="0"/>
          <property name="caseIndent" value="4"/>
          <property name="throwsIndent" value="4"/>
          <property name="lineWrappingIndentation" value="4"/>
          <property name="arrayInitIndent" value="4"/>
      </module>
      <module name="OuterTypeFilename"/>
      <module name="TodoComment"/>
      <module name="UpperEll"/>
      <!-- Modifiers -->
      <module name="ModifierOrder"/>
      <module name="RedundantModifier"/>
      <!-- Naming Conventions-->
      <module name="AbbreviationAsWordInName">
          <property name="ignoreFinal" value="false"/>
          <property name="allowedAbbreviationLength" value="3"/>
      </module>
      <module name="CatchParameterName">
          <property name="format" value="^[a-z]([a-z0-9][a-zA-Z0-9]*)?$"/>
          <message key="name.invalidPattern"
                   value="Catch parameter name ''{0}'' must match pattern ''{1}''."/>
      </module>
      <module name="ClassTypeParameterName">
          <property name="format" value="(^[A-Z][0-9]?)$|([A-Z][a-zA-Z0-9]*[T]$)"/>
          <message key="name.invalidPattern"
                   value="Class type name ''{0}'' must match pattern ''{1}''."/>
      </module>
      <module name="ConstantName"/>
      <module name="InterfaceTypeParameterName">
          <property name="format" value="(^[A-Z][0-9]?)$|([A-Z][a-zA-Z0-9]*[T]$)"/>
          <message key="name.invalidPattern"
                   value="Interface type name ''{0}'' must match pattern ''{1}''."/>
      </module>
      <module name="LocalVariableName">
        <property name="allowOneCharVarInForLoop" value="true"/>
      </module>
      <module name="MemberName"/>
      <module name="MethodName"/>
      <module name="MethodTypeParameterName"/>
      <module name="PackageName"/>
      <module name="ParameterName"/>
      <module name="StaticVariableName"/>
      <module name="TypeName"/>
      <!-- Whitespace -->
      <module name="EmptyLineSeparator">
          <property name="allowNoEmptyLineBetweenFields" value="true"/>
      </module>
      <module name="GenericWhitespace">
          <message key="ws.followed"
                   value="GenericWhitespace ''{0}'' is followed by whitespace."/>
          <message key="ws.preceded"
                   value="GenericWhitespace ''{0}'' is preceded with whitespace."/>
          <message key="ws.illegalFollow"
                   value="GenericWhitespace ''{0}'' should followed by whitespace."/>
          <message key="ws.notPreceded"
                   value="GenericWhitespace ''{0}'' is not preceded with whitespace."/>
      </module>
      <module name="MethodParamPad"/>
      <module name="NoLineWrap"/>
      <module name="NoWhitespaceBefore">
          <property name="tokens"
                    value="COMMA, SEMI, POST_INC, POST_DEC, DOT, ELLIPSIS, METHOD_REF"/>
          <property name="allowLineBreaks" value="true"/>
      </module>
      <module name="OperatorWrap">
          <property name="option" value="NL"/>
          <property name="tokens" value="BAND, BOR, BSR, BXOR, DIV, EQUAL, GE, GT, LAND, LE, LITERAL_INSTANCEOF, LOR, LT, MINUS, MOD, NOT_EQUAL, PLUS, QUESTION, SL, SR, STAR, METHOD_REF "/>
      </module>
      <module name="SeparatorWrap">
          <property name="tokens" value="DOT"/>
          <property name="option" value="nl"/>
      </module>
      <module name="SeparatorWrap">
          <property name="tokens" value="COMMA,ELLIPSIS,ARRAY_DECLARATOR"/>
          <property name="option" value="EOL"/>
      </module>
      <module name="WhitespaceAround"/>
    </module>
    <!-- Size Violations -->
    <module name="LineLength">
      <property name="max" value="100"/>
    </module>
    <!-- Whitespace -->
    <module name="FileTabCharacter">
        <property name="eachLine" value="true"/>
    </module>
</module>
